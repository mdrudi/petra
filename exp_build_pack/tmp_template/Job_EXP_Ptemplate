
#from include
# NEMO
# nemo_n_mpi_proc
# NEMO_DATA0
# NEMO_DATA1
# WW
# ww_n_mpi_proc
# WW_DATAIN
# ProductionCycle   --> optional
# INSITUActive
# SSTActive

#from ExpBuild
# WorkingDir
# TSD
# TSH
# TED
# TEH
# incasenotfirst
# ProductionCycle  --> generated in case not defined by include

echo
#export LD_LIBRARY_PATH
echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH
echo
PATH=${WORKINGDIR}/tmp:$PATH
echo PATH=$PATH

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# print echo of commands before and after shell interpretation
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

date
set -vx

rm -Rf ${WORKINGDIR}/model
mkdir ${WORKINGDIR}/model
cd ${WORKINGDIR}/model


echo $LSB_JOBID > index_P${ACTUALINDEX}.jobid
MpiLogFile=${WORKINGDIR}/output/mpiexec.log_${LSB_JOBID}_${TED}${TEH}







NemoActive=0
WwActive=0

if [ $NEMO = "yes" ]; then
   NemoActive=1
fi

if [ $WW = "yes" ]; then
   WwActive=1
fi


ERRORNP=0
ERRORWP=0

sec_counter.py TagSecCounterPA_init

if [ $NemoActive -eq 1 ]; then
   sh ../tmp/NEMOPrep.sh $TSD $TSH $TED $TEH $ProductionCycle ${WORKINGDIR} $NEMO_DATA0 $NEMO_DATA1 $NEMO_DATA2 $ACTUALINDEX $nemo_n_mpi_proc $incasenotfirst $INSITUActive $SSTActive
   LastErrornp=$?
   ERRORNP=`expr $ERRORNP + $LastErrornp`
   fi

sec_counter.py TagSecCounterPB_nprep_done

if [ $WwActive -eq 1 ]; then
   sh ../tmp/WWPrep.sh $TSD $TSH $TED $TEH $ProductionCycle ${WORKINGDIR} $WW_DATAIN $NEMO_DATA1 $incasenotfirst
   LastErrorwp=$?
   ERRORWP=`expr $ERRORWP + $LastErrorwp`
   fi

sec_counter.py TagSecCounterPC_wwprep_done

if [ $ERRORNP -ne 0 ]; then
   echo "ERROR IN NEMOPrep.sh"
   touch index_P${ACTUALINDEX}.error
   exit 1
fi

if [ $ERRORWP -ne 0 ]; then
   echo "ERROR IN WWPrep.sh"
   touch index_P${ACTUALINDEX}.error
   exit 1
fi



cd ${WORKINGDIR}/model

if [ $NemoActive -eq 1 ] && [ $WwActive -eq 1 ];then
   MpiExecApp=" -n $nemo_n_mpi_proc  ../tmp/opa -n : -n $ww_n_mpi_proc ../tmp/ww3_shel -n "
   #echo "-n TCPUION ../tmp/ioserver" >> mpiexec.app.txt
   fi

if [ $NemoActive -eq 1 ] && [ ! $WwActive -eq 1 ]; then
   MpiExecApp="-n $nemo_n_mpi_proc  ../tmp/opa -n "
   #echo "-n TCPUION ../tmp/ioserver" >> mpiexec.app.txt
   fi

if [ ! $NemoActive -eq 1 ] && [ $WwActive -eq 1 ]; then
   MpiExecApp="-n $ww_n_mpi_proc ../tmp/ww3_shel -n "
   fi

date -u > ${MpiLogFile} 

$TagMPIRUN $MpiExecApp  >> ${MpiLogFile} 2>&1 

sec_counter.py TagSecCounterPD_parallel_done

echo "#### PHYS WAVE DONE" >> ${MpiLogFile}

if [ _$INSITUActive = "_yes" ]; then
   rm -f corr.nc
   ln -fs ${WORKINGDIR}/tmp/var_3d var_3d
   cp -p ${WORKINGDIR}/tmp/var_3d_nml var_3d_nml

   var3d_n_mpi_proc=`expr $nemo_n_mpi_proc + $ww_n_mpi_proc`
   MpiExecApp="-n $var3d_n_mpi_proc ./var_3d -n "
   #time mpirun -machinefile $LSB_DJOB_HOSTFILE -iface ib0 -wdir ${WORKINGDIR}/model $MpiExecApp >> ${MpiLogFile}
   mpiexec.hydra $MpiExecApp  >> ${MpiLogFile} 2>&1 
   echo "#### 3DVAR DONE" >> ${MpiLogFile}

fi

sec_counter.py TagSecCounterPE_3dvar_done

echo "#### ALL DONE" >> ${MpiLogFile}


#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## -- Save output files
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ls -alF

ERRORS=0
ERRORSW=0

if [ $NemoActive -eq 1 ]; then
   sh ../tmp/NEMOPost.sh  $TED $TEH ${WORKINGDIR} $nemo_n_mpi_proc $ACTUALINDEX $INSITUActive
   LastError=$?
   ERRORS=`expr $ERRORS + $LastError`
   fi

sec_counter.py TagSecCounterPF_npost_done

if [ $WwActive -eq 1 ]; then
   sh ../tmp/WWPost.sh $TSD $TSH $TED $TEH ${WORKINGDIR} $WW_DATAIN
   LastErrorw=$?
   ERRORSW=`expr $ERRORSW + $LastErrorw`
   fi

sec_counter.py TagSecCounterPG_wwpost_done




#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#- Submit next Job
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#cd ${WORKINGDIR}/model
cd ${WORKINGDIR}/output

if [ $ERRORS -eq 0 -a $ERRORSW -eq 0 ]; then
#   mv -f ${WORKINGDIR}/model/mpiexec.log ${WORKINGDIR}/output/mpiexec.log_${TED}${TEH}
   touch index_P${ACTUALINDEX}.done
   else
   touch index_P${ACTUALINDEX}.error
   exit 1
   fi


#echo $LSB_JOBID > index_${ACTUALINDEX}.jobid  #messo all inizio del job

